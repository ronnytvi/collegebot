from typing import Text
from mysql.connector.utils import validate_normalized_unicode_string
import telebot
import mysql.connector
import config
from telebot import types
from datetime import datetime, time, timedelta
import re
import time

TOKEN = "2048301461:AAERZRoM-7xUTYAgdij-mJkCfDlWOdXk5-o"
bot = telebot.TeleBot(TOKEN)


db = mysql.connector.connect(
  host=config.host,
  user=config.user,
  password=config.password,
  port=config.port,
  database=config.database
)
 
cursor = db.cursor()
today = datetime.today().weekday()
today_date = datetime.now()
date_today_str = today_date.strftime('%Y-%m-%d')

today_plus_seven_days = datetime.now() + timedelta(days=6)
sub_date = today_plus_seven_days.strftime('%Y-%m-%d')


nowTime = int(time.time())


@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    sql = "SELECT user_group FROM users WHERE userid={0}".format(message.from_user.id)
    cursor.execute(sql)
    existsUser = cursor.fetchone()

    print(nowTime)

    if (existsUser == None):
        msg = bot.send_message(message.chat.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é. –ü–æ–¥–∞—Ä–æ—á–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 7 –¥–Ω–µ–π —É–∂–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.\n\n–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã. –ù–∞–ø—Ä–∏–º–µ—Ä, –ö–ò–°9-121–ê")
        bot.register_next_step_handler(msg, process_registrationuser_step)
    
    else:
        bot.delete_message(message.chat.id, message.message_id)
        markup = types.InlineKeyboardMarkup(row_width=2)
        item_btn_tablelist = types.InlineKeyboardButton(text = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', callback_data='tablelist')
        item_btn_option = types.InlineKeyboardButton(text = '‚öô –û–ø—Ü–∏–∏', callback_data='option')
        item_btn_subs = types.InlineKeyboardButton(text = '–ü–æ–¥–ø–∏—Å–∫–∞', callback_data='sub')
        item_btn_about_bot = types.InlineKeyboardButton(text = 'üåç –ß—Ç–æ —ç—Ç–æ?', callback_data='about_bot')
        markup.add(item_btn_tablelist, item_btn_option, item_btn_subs, item_btn_about_bot)
        bot.send_message(message.chat.id, "–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º!\n–ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è", reply_markup=markup)

@bot.callback_query_handler(func = lambda call: True)
def answer(call: types.CallbackQuery):
    #–ö–Ω–æ–ø–∫–∞ –†–ê–°–ü–ò–°–ê–ù–ò–ï
    if call.data == 'tablelist':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup = types.InlineKeyboardMarkup(row_width=2)
        item_btn_tablelist_top_week = types.InlineKeyboardButton(text='–ù–µ–¥–µ–ª—è 1', callback_data='week_one')
        item_btn_tablelist_low_week = types.InlineKeyboardButton(text='–ù–µ–¥–µ–ª—è 2', callback_data='week_two')
        item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_tablelist_top_week, item_btn_tablelist_low_week, item_btn_back)
        bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é', reply_markup=markup)
    
    #–ö–Ω–æ–ø–∫–∞ –û–ø—Ü–∏–∏
    elif call.data == 'option':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup = types.InlineKeyboardMarkup(row_width=2)
        item_btn_add_group = types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å', callback_data='add_group')
        item_btn_send_error = types.InlineKeyboardButton(text='‚ùå–û—à–∏–±–∫–∞?', callback_data='error')
        item_btn_group = types.InlineKeyboardButton(text='‚ô¶ –ì—Ä—É–ø–ø–∞', callback_data='group')
        item_btn_donat = types.InlineKeyboardButton(text='üí∞ Donate', callback_data='donat')
        item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_group, item_btn_add_group, item_btn_send_error, item_btn_donat, item_btn_back)
        bot.send_message(call.message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é', reply_markup=markup)
    
    #–ö–Ω–æ–ø–∫–∞ –ß—Ç–æ —ç—Ç–æ?
    elif call.data == 'about_bot':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup = types.InlineKeyboardMarkup(row_width=2)
        item_btn_tablelist = types.InlineKeyboardButton(text = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', callback_data='tablelist')
        item_btn_option = types.InlineKeyboardButton(text = '‚öô –û–ø—Ü–∏–∏', callback_data='option')
        item_btn_subs = types.InlineKeyboardButton(text = '–ü–æ–¥–ø–∏—Å–∫–∞', callback_data='sub')
        item_btn_about_bot = types.InlineKeyboardButton(text = 'üåç –ß—Ç–æ —ç—Ç–æ?', callback_data='about_bot')
        markup.add(item_btn_tablelist, item_btn_option, item_btn_subs, item_btn_about_bot)
        bot.send_message(call.message.chat.id, '–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≤ –ö–æ–ª–ª–µ–¥–∂–µ —ç–∫–æ–Ω–æ–º–∏–∫–∏ –∏ —Å–µ—Ä–≤–∏—Å–∞.\n–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Ç–æ, —á—Ç–æ –∑–¥–µ—Å—å –Ω–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∑–∞–º–µ–Ω—ã!', reply_markup=markup)

    #–ö–Ω–æ–ø–∫–∞ –ù–∞–∑–∞–¥
    elif call.data == 'back':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup = types.InlineKeyboardMarkup(row_width=2)
        item_btn_tablelist = types.InlineKeyboardButton(text = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', callback_data='tablelist')
        item_btn_option = types.InlineKeyboardButton(text = '‚öô –û–ø—Ü–∏–∏', callback_data='option')
        item_btn_subs = types.InlineKeyboardButton(text = '–ü–æ–¥–ø–∏—Å–∫–∞', callback_data='sub')
        item_btn_about_bot = types.InlineKeyboardButton(text = 'üåç –ß—Ç–æ —ç—Ç–æ?', callback_data='about_bot')
        markup.add(item_btn_tablelist, item_btn_option, item_btn_subs, item_btn_about_bot)
        bot.send_message(call.message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é', reply_markup=markup)

    #–ë–õ–û–ö –û–ø—Ü–∏–∏
    #–ö–Ω–æ–ø–∫–∞ –ì—Ä—É–ø–ø–∞
    elif call.data == 'group':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        markup = types.InlineKeyboardMarkup(row_width=2)
        item_btn_my_group = types.InlineKeyboardButton(text = 'üî• –ú–æ—è', callback_data='my_group')
        item_btn_change_group = types.InlineKeyboardButton(text = '–ò–∑–º–µ–Ω–∏—Ç—å', callback_data='change_group')
        item_btn_list_group = types.InlineKeyboardButton(text = 'üìå–°–ø–∏—Å–æ–∫', callback_data='list_group')
        item_btn_back = types.InlineKeyboardButton(text = '‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_my_group, item_btn_change_group, item_btn_list_group, item_btn_back)
        bot.send_message(call.message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é', reply_markup=markup)

    #–ö–Ω–æ–ø–∫–∞ –î–æ–±–∞–≤–∏—Ç—å
    elif call.data == 'add_group':
        markup = types.InlineKeyboardMarkup(row_width=2)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        item_btn_add_group = types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å', callback_data='add_group')
        item_btn_send_error = types.InlineKeyboardButton(text='‚ùå–û—à–∏–±–∫–∞?', callback_data='error')
        item_btn_group = types.InlineKeyboardButton(text='‚ô¶ –ì—Ä—É–ø–ø–∞', callback_data='group')
        item_btn_donat = types.InlineKeyboardButton(text='üí∞ Donate', callback_data='donat')
        item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_group, item_btn_add_group, item_btn_send_error, item_btn_donat, item_btn_back)
        bot.send_message(call.message.chat.id, '–ß—Ç–æ–±—ã –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã, –æ—Ç–ø—Ä–∞–≤—å –ø–∏—Å—å–º–æ –Ω–∞ rgdevelopers.ru@gmail.com —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –∏ –µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –Ω–∞ –æ–±–µ –Ω–µ–¥–µ–ª–∏. –í —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫ –º—ã –¥–æ–±–∞–≤–∏–º —Ç–≤–æ—é –≥—Ä—É–ø–ø—É', reply_markup=markup)

    #–ö–Ω–æ–ø–∫–∞ –û—à–∏–±–∫–∞
    elif call.data == 'error':
        markup = types.InlineKeyboardMarkup(row_width=2)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        item_btn_add_group = types.InlineKeyboardButton(text='–î–æ–±–∞–≤–∏—Ç—å', callback_data='add_group')
        item_btn_send_error = types.InlineKeyboardButton(text='‚ùå–û—à–∏–±–∫–∞?', callback_data='error')
        item_btn_group = types.InlineKeyboardButton(text='‚ô¶ –ì—Ä—É–ø–ø–∞', callback_data='group')
        item_btn_donat = types.InlineKeyboardButton(text='üí∞ Donate', callback_data='donat')
        item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_group, item_btn_add_group, item_btn_send_error, item_btn_donat, item_btn_back)
        bot.send_message(call.message.chat.id, '–ù–∞—à–µ–ª –æ—à–∏–±–∫—É –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏? –û—Ç–ø—Ä–∞–≤—å –ø–∏—Å—å–º–æ –Ω–∞ rgdevelopers.ru@gmail.com —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º –æ–ø–∏—Å–∞–Ω–∏–µ–º –æ—à–∏–±–∫–∏. –í —Ç–µ—á–µ–Ω–∏–∏ —Å—É—Ç–æ–∫ –º—ã –∏—Å–ø—Ä–∞–≤–∏–º —Å–≤–æ—é –æ–ø–ª–æ—à–Ω–æ—Å—Ç—å', reply_markup=markup)
    
    #–ö–Ω–æ–ø–∫–∞ Donate
    elif call.data == 'donat':
        markup = types.InlineKeyboardMarkup(row_width=2)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        item_btn_card = types.InlineKeyboardButton(text='‚ù§ QIWI', callback_data='qiwi')
        item_btn_yoomoney = types.InlineKeyboardButton(text='‚ù§ –ÆMoney', callback_data='yoomoney')
        item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_card, item_btn_yoomoney, item_btn_back)
        bot.send_message(call.message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é', reply_markup=markup)

    #–ö–Ω–æ–ø–∫–∞ –ú–æ—è
    elif call.data == 'my_group':
        markup = types.InlineKeyboardMarkup(row_width=2)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        sql = "SELECT user_group FROM users WHERE userid={0}".format(call.from_user.id)
        cursor.execute(sql)
        user_group = cursor.fetchone()
        item_btn_my_group = types.InlineKeyboardButton(text = 'üî• –ú–æ—è', callback_data='my_group')
        item_btn_change_group = types.InlineKeyboardButton(text = '–ò–∑–º–µ–Ω–∏—Ç—å', callback_data='change_group')
        item_btn_list_group = types.InlineKeyboardButton(text = 'üìå–°–ø–∏—Å–æ–∫', callback_data='list_group')
        item_btn_back = types.InlineKeyboardButton(text = '‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_my_group, item_btn_change_group, item_btn_list_group, item_btn_back)
        bot.send_message(call.message.chat.id, user_group, reply_markup=markup)

    #–ö–Ω–æ–ø–∫–∞ –ò–∑–º–µ–Ω–∏—Ç—å
    elif call.data == 'change_group':
        bot.delete_message(call.message.chat.id, call.message.message_id)
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≥—Ä—É–ø–ø—ã')
        bot.register_next_step_handler(msg, process_changegroup_step)

    #–ö–Ω–æ–ø–∫–∞ –°–ø–∏—Å–æ–∫
    elif call.data == 'list_group':
        markup = types.InlineKeyboardMarkup(row_width=2)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        item_btn_my_group = types.InlineKeyboardButton(text = 'üî• –ú–æ—è', callback_data='my_group')
        item_btn_change_group = types.InlineKeyboardButton(text = '–ò–∑–º–µ–Ω–∏—Ç—å', callback_data='change_group')
        item_btn_list_group = types.InlineKeyboardButton(text = 'üìå–°–ø–∏—Å–æ–∫', callback_data='list_group')
        item_btn_back = types.InlineKeyboardButton(text = '‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_my_group, item_btn_change_group, item_btn_list_group, item_btn_back)
        sql = "SELECT group_name FROM tablelist ORDER BY group_name ASC"
        cursor.execute(sql)
        user_group = cursor.fetchall()
        bot.send_message(call.message.chat.id, "–î–æ—Å—Ç—É–ø–Ω–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–∏—Ö –≥—Ä—É–ø–ø:\n")
        for group in user_group:
            bot.send_message(call.message.chat.id, group[0]+"\n")

        bot.send_message(call.message.chat.id, "\n–ï—Å–ª–∏ –≤ —ç—Ç–æ–º —Å–ø–∏—Å–∫–µ –Ω–µ—Ç —Ç–≤–æ–µ–π –≥—Ä—É–ø–ø—ã —Ç—ã –º–æ–∂–µ—à—å –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ. –î–ª—è —ç—Ç–æ–≥–æ –ø–µ—Ä–µ–π–¥–∏ –≤ ‚öô –û–ø—Ü–∏–∏, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –î–æ–±–∞–≤–∏—Ç—å –∏ —Å–ª–µ–¥—É–π —É–∫–∞–∑–∞–Ω–∏—è–º", reply_markup=markup)

    #–ö–Ω–æ–ø–∫–∞ QIWI
    elif call.data == 'qiwi':
        markup = types.InlineKeyboardMarkup(row_width=2)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        item_btn_card = types.InlineKeyboardButton(text='‚ù§ QIWI', callback_data='qiwi')
        item_btn_yoomoney = types.InlineKeyboardButton(text='‚ù§ –ÆMoney', callback_data='yoomoney')
        item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_card, item_btn_yoomoney, item_btn_back)
        bot.send_message(call.message.chat.id, '–•–æ—á–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–æ—Ñ—Ç–∞? –ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±—É—é —Å—É–º–º—É –Ω–∞ –∫–∞—Ä—Ç—É - 4890 4947 2349 4209. –°–ø–∞—Å–∏–±–æ', reply_markup=markup)

    #–ö–Ω–æ–ø–∫–∞ –ÆMoney
    elif call.data == 'yoomoney':
        markup = types.InlineKeyboardMarkup(row_width=2)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        item_btn_card = types.InlineKeyboardButton(text='‚ù§ QIWI', callback_data='qiwi')
        item_btn_yoomoney = types.InlineKeyboardButton(text='‚ù§ –ÆMoney', callback_data='yoomoney')
        item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_card, item_btn_yoomoney, item_btn_back)
        bot.send_message(call.message.chat.id, '–•–æ—á–µ—à—å –ø–æ–¥–¥–µ—Ä–∂–∞—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∏ —É–ª—É—á—à–∏—Ç—å –∫–∞—á–µ—Å—Ç–≤–æ —Å–æ—Ñ—Ç–∞? –ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª—é–±—É—é —Å—É–º–º—É –Ω–∞ –∫–æ—à–µ–ª–µ–∫ - 4100 1172 2270 4122. –°–ø–∞—Å–∏–±–æ', reply_markup=markup)


    #–ë–õ–û–ö –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ
    #–ö–Ω–æ–ø–∫–∞ –ù–µ–¥–µ–ª—è 1
    elif call.data == 'week_one':
        markup = types.InlineKeyboardMarkup(row_width=2)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        item_btn_tablelist_dat = types.InlineKeyboardButton(text='üíõ –°–µ–≥–æ–¥–Ω—è', callback_data='now')
        item_btn_tablelist_tomorrow = types.InlineKeyboardButton(text='üíö –ó–∞–≤—Ç—Ä–∞', callback_data='twomorrow')
        item_btn_tablelist_week = types.InlineKeyboardButton(text='üß° –ù–µ–¥–µ–ª—è', callback_data='first_week')
        item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_tablelist_dat, item_btn_tablelist_tomorrow, item_btn_tablelist_week, item_btn_back)
        bot.send_message(call.message.chat.id, '–ö–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç—å?', reply_markup=markup)

    #–ö–Ω–æ–ø–∫–∞ –°–µ–≥–æ–¥–Ω—è 1
    elif call.data == 'now':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item_btn_tablelist = types.KeyboardButton('OK')
        markup.add(item_btn_tablelist)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Å–∏–º–≤–æ–ª –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É OK', reply_markup=markup)
        bot.register_next_step_handler(msg, process_tablelistdaytopweek_step)

    #–ö–Ω–æ–ø–∫–∞ –ó–∞–≤—Ç—Ä–∞ 1
    elif call.data == 'twomorrow':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item_btn_tablelist = types.KeyboardButton('OK')
        markup.add(item_btn_tablelist)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Å–∏–º–≤–æ–ª –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É OK', reply_markup=markup)
        bot.register_next_step_handler(msg, process_tablelisttomorrowtopweek_step)

    #–ö–Ω–æ–ø–∫–∞ –ù–µ–¥–µ–ª—è 1
    elif call.data == 'first_week':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item_btn_tablelist = types.KeyboardButton('OK')
        markup.add(item_btn_tablelist)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Å–∏–º–≤–æ–ª –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –µ—â–µ —Ä–∞–∑')
        bot.register_next_step_handler(msg, process_tablelisttopweek_step)


    #–ö–Ω–æ–ø–∫–∞ –ù–µ–¥–µ–ª—è 2
    elif call.data == 'week_two':
        markup = types.InlineKeyboardMarkup(row_width=2)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        item_btn_tablelist_dat = types.InlineKeyboardButton(text='üíô –°–µ–≥–æ–¥–Ω—è', callback_data='now_two')
        item_btn_tablelist_tomorrow = types.InlineKeyboardButton(text='üíú –ó–∞–≤—Ç—Ä–∞', callback_data='twomorrow_two')
        item_btn_tablelist_week = types.InlineKeyboardButton(text='üñ§ –ù–µ–¥–µ–ª—è', callback_data='second_week')
        item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_tablelist_dat, item_btn_tablelist_tomorrow, item_btn_tablelist_week, item_btn_back)
        bot.send_message(call.message.chat.id, '–ö–∞–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞—Ç—å?', reply_markup=markup)


    #–ö–Ω–æ–ø–∫–∞ –°–µ–≥–æ–¥–Ω—è
    elif call.data == 'now_two':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item_btn_tablelist = types.KeyboardButton('OK')
        markup.add(item_btn_tablelist)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Å–∏–º–≤–æ–ª –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É OK', reply_markup=markup)
        bot.register_next_step_handler(msg, process_tablelistdaylowweek_step)

    #–ö–Ω–æ–ø–∫–∞ –ó–∞–≤—Ç—Ä–∞
    elif call.data == 'twomorrow_two':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item_btn_tablelist = types.KeyboardButton('OK')
        markup.add(item_btn_tablelist)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Å–∏–º–≤–æ–ª –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É OK', reply_markup=markup)
        bot.register_next_step_handler(msg, process_tablelisttomorrowlowweek_step)

    #–ö–Ω–æ–ø–∫–∞ –ù–µ–¥–µ–ª—è 2 table
    elif call.data == 'second_week':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        item_btn_tablelist = types.KeyboardButton('OK')
        markup.add(item_btn_tablelist)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        msg = bot.send_message(call.message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –ª—é–±–æ–π —Å–∏–º–≤–æ–ª –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –µ—â–µ —Ä–∞–∑')
        bot.register_next_step_handler(msg, process_tablelistlowweek_step)

    #–ö–Ω–æ–ø–∫–∞ –ü–æ–¥–ø–∏—Å–∫–∞
    elif call.data == 'sub':
        markup = types.InlineKeyboardMarkup(row_width=2)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        item_btn_sub_week = types.InlineKeyboardButton(text='7 –¥–Ω–µ–π', callback_data='sub_seven_days')
        item_btn_sum_month = types.InlineKeyboardButton(text='30 –¥–Ω–µ–π', callback_data='sub_month')
        item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_sub_week, item_btn_sum_month, item_btn_back)
        bot.send_message(call.message.chat.id, '–ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–∞–Ω–Ω—ã–º –±–æ—Ç–æ–º. –ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É, –¥–ª—è –Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ —Å—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è', reply_markup=markup)

    #–ö–Ω–æ–ø–∫–∞ 7 –¥–Ω–µ–π
    elif call.data == 'sub_seven_days':
        markup = types.InlineKeyboardMarkup(row_width=2)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        item_btn_sub_week = types.InlineKeyboardButton(text='7 –¥–Ω–µ–π', callback_data='sub_seven_days')
        item_btn_sum_month = types.InlineKeyboardButton(text='30 –¥–Ω–µ–π', callback_data='sub_month')
        item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_sub_week, item_btn_sum_month, item_btn_back)
        bot.send_message(call.message.chat.id, '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 7 –¥–Ω–µ–π.\n\n–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –æ–ø–ª–∞—Ç–∏ –µ–µ –ø–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ —Å—É–º–º—É 10 —Ä—É–±–ª–µ–π –Ω–∞ –∫–æ—à–µ–ª–µ–∫ –ÆMoney - 4890 4947 2349 4209. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤ —Ç–≤–æ–µ–º –æ–Ω–ª–∞–π–Ω –±–∞–Ω–∫–µ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å —á–µ–∫ –Ω–∞—à–µ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É - @rg_staff', reply_markup=markup)

    #–ö–Ω–æ–ø–∫–∞ 30 –¥–Ω–µ–π
    elif call.data == 'sub_month':
        markup = types.InlineKeyboardMarkup(row_width=2)
        bot.delete_message(call.message.chat.id, call.message.message_id)
        item_btn_sub_week = types.InlineKeyboardButton(text='7 –¥–Ω–µ–π', callback_data='sub_seven_days')
        item_btn_sum_month = types.InlineKeyboardButton(text='30 –¥–Ω–µ–π', callback_data='sub_month')
        item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_sub_week, item_btn_sum_month, item_btn_back)
        bot.send_message(call.message.chat.id, '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ 30 –¥–Ω–µ–π.\n\n–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É –æ–ø–ª–∞—Ç–∏ –µ–µ –ø–µ—Ä–µ–≤–æ–¥–æ–º –Ω–∞ —Å—É–º–º—É 30 —Ä—É–±–ª–µ–π –Ω–∞ –∫–æ—à–µ–ª–µ–∫ –ÆMoney - 4890 4947 2349 4209. –≠—Ç–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –≤ —Ç–≤–æ–µ–º –æ–Ω–ª–∞–π–Ω –±–∞–Ω–∫–µ –±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏. –ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å —á–µ–∫ –Ω–∞—à–µ–º—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É - @rg_staff', reply_markup=markup)












#-------------------------------------------------------------------------------------------------------------------------------------------------------------
#–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def process_registrationuser_step(message):
    try:
        bonusSubTime = nowTime + days_to_seconds(7)
        sql = "INSERT INTO users (userid, user_group, date_registration, sub_end) VALUES (%s, %s, %s, %s)"
        val = (message.from_user.id, message.text, date_today_str, bonusSubTime)
        cursor.execute(sql, val)
        db.commit()

        markup = types.InlineKeyboardMarkup(row_width=2)
        item_btn_tablelist = types.InlineKeyboardButton(text = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ', callback_data='tablelist')
        item_btn_option = types.InlineKeyboardButton(text = '‚öô –û–ø—Ü–∏–∏', callback_data='option')
        item_btn_subs = types.InlineKeyboardButton(text = '–ü–æ–¥–ø–∏—Å–∫–∞', callback_data='sub')
        item_btn_about_bot = types.InlineKeyboardButton(text = 'üåç –ß—Ç–æ —ç—Ç–æ?', callback_data='about_bot')
        markup.add(item_btn_tablelist, item_btn_option, item_btn_subs, item_btn_about_bot)
        bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã\n–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –∫–Ω–æ–ø–∫—É –≤ –º–µ–Ω—é", reply_markup=markup)

    except Exception as e:
        bot.reply_to(message, 'Error: registration false')
#-------------------------------------------------------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------------------------------------------------------
#–ø–æ–∏—Å–∫ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ 1 –Ω–µ–¥–µ–ª–µ
def process_tablelistdaytopweek_step(message):
    try:
        db = mysql.connector.connect(
        host=config.host,
        user=config.user,
        password=config.password,
        port=config.port,
        database=config.database
        )
        cursor = db.cursor()

        #–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        sql = "SELECT user_group FROM users WHERE userid=%s"
        val = (message.from_user.id, )
        cursor.execute(sql, val)
        groups = cursor.fetchall()
        for group in groups:
            userGroup = group[0]

        #*********************************************************
        sql = "SELECT sub_end FROM users WHERE userid=%s"
        val = (message.from_user.id, )
        cursor.execute(sql, val)
        result = cursor.fetchall()
        for time in result:
            sub_end_time = time[0]
        print(sub_end_time)
        
        #*********************************************************

        if sub_end_time < nowTime:
            markup = types.InlineKeyboardMarkup()
            bot.delete_message(message.chat.id, message.message_id)
            item_btn_subs = types.InlineKeyboardButton(text = '–ü–æ–¥–ø–∏—Å–∫–∞', callback_data='sub')
            item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
            markup.add(item_btn_subs, item_btn_back)
            bot.send_message(message.chat.id, "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫. –û—Ñ–æ—Ä–º–∏ –Ω–æ–≤—É—é —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ –±–æ—Ç–∞", reply_markup=markup)
        else:
            #–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≥—Ä—É–ø–ø–µ
            markup = types.InlineKeyboardMarkup()
            bot.delete_message(message.chat.id, message.message_id)
            item_btn_tablelist_day = types.InlineKeyboardButton(text='üíõ –°–µ–≥–æ–¥–Ω—è', callback_data='now')
            item_btn_tablelist_tomorrow = types.InlineKeyboardButton(text='üíö –ó–∞–≤—Ç—Ä–∞', callback_data='twomorrow')
            item_btn_tablelist_week = types.InlineKeyboardButton(text='üß° –ù–µ–¥–µ–ª—è', callback_data='first_week')
            item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
            markup.add(item_btn_tablelist_day, item_btn_tablelist_tomorrow, item_btn_tablelist_week, item_btn_back)
            sql = 'SELECT * FROM tablelist WHERE group_name=%s'
            val = (userGroup, )
            cursor.execute(sql, val)
            lists = cursor.fetchall()
            for list in lists:
                if today == 0:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n" + list[3], reply_markup=markup)
                elif today == 1:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n" + list[4], reply_markup=markup)
                elif today == 2:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n" + list[5],reply_markup=markup )
                elif today == 3:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n" +  list[6], reply_markup=markup)
                elif today == 4:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n" + list[7], reply_markup=markup)
                elif today == 5:
                    bot.send_message(message.chat.id, "–°–µ–≥–æ–¥–Ω—è —É —Ç–µ–±—è –≤—ã—Ö–æ–¥–æ–π", reply_markup=markup)
                elif today == 6:
                    bot.send_message(message.chat.id, "–°–µ–≥–æ–¥–Ω—è —É —Ç–µ–±—è –≤—ã—Ö–æ–¥–æ–π", reply_markup=markup)

            cursor.close()
            db.close()
    except Exception as e:
        bot.reply_to(message, 'Error #2')
#-------------------------------------------------------------------------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------------------------------------------------------------------------
#–ø–æ–∏—Å–∫ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –ø–æ 1 –Ω–µ–¥–µ–ª–µ
def process_tablelisttomorrowtopweek_step(message):
    try:
        db = mysql.connector.connect(
        host=config.host,
        user=config.user,
        password=config.password,
        port=config.port,
        database=config.database
        )
        cursor = db.cursor()

        #–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        sql = "SELECT user_group FROM users WHERE userid=%s"
        val = (message.from_user.id, )
        cursor.execute(sql, val)
        groups = cursor.fetchall()
        for group in groups:
            userGroup = group[0]


        #*********************************************************
        sql = "SELECT sub_end FROM users WHERE userid=%s"
        val = (message.from_user.id, )
        cursor.execute(sql, val)
        result = cursor.fetchall()
        for time in result:
            sub_end_time = time[0]
        print(sub_end_time)
        #*********************************************************

        if sub_end_time < nowTime:
            markup = types.InlineKeyboardMarkup()
            bot.delete_message(message.chat.id, message.message_id)
            item_btn_subs = types.InlineKeyboardButton(text = '–ü–æ–¥–ø–∏—Å–∫–∞', callback_data='sub')
            item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
            markup.add(item_btn_subs, item_btn_back)
            bot.send_message(message.chat.id, "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫. –û—Ñ–æ—Ä–º–∏ –Ω–æ–≤—É—é —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ –±–æ—Ç–∞", reply_markup=markup)
        else:
            markup = types.InlineKeyboardMarkup()
            bot.delete_message(message.chat.id, message.message_id)
            item_btn_tablelist_dat = types.InlineKeyboardButton(text='üíõ –°–µ–≥–æ–¥–Ω—è', callback_data='now')
            item_btn_tablelist_tomorrow = types.InlineKeyboardButton(text='üíö –ó–∞–≤—Ç—Ä–∞', callback_data='twomorrow')
            item_btn_tablelist_week = types.InlineKeyboardButton(text='üß° –ù–µ–¥–µ–ª—è', callback_data='first_week')
            item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
            markup.add(item_btn_tablelist_dat, item_btn_tablelist_tomorrow, item_btn_tablelist_week, item_btn_back)
            #–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≥—Ä—É–ø–ø–µ
            sql = 'SELECT * FROM tablelist WHERE group_name=%s'
            val = (userGroup, )
            cursor.execute(sql, val)
            lists = cursor.fetchall()
            for list in lists:
                if today == 0:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n\n" + list[4], reply_markup=markup)
                elif today == 1:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n\n" + list[5], reply_markup=markup)
                elif today == 2:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n\n" + list[6], reply_markup=markup)
                elif today == 3:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n\n" +  list[7], reply_markup=markup)
                elif today == 4:
                    bot.send_message(message.chat.id, "–ó–∞–≤—Ç—Ä–∞ —É —Ç–µ–±—è –≤—ã—Ö–æ–¥–æ–π", reply_markup=markup)
                elif today == 5:
                    bot.send_message(message.chat.id, "–ó–∞–≤—Ç—Ä–∞ —É —Ç–µ–±—è –≤—ã—Ö–æ–¥–æ–π", reply_markup=markup)
                elif today == 6:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n\n" + list[3], reply_markup=markup)
            cursor.close()
            db.close()
    except Exception as e:
        bot.reply_to(message, 'Error #222')
#-------------------------------------------------------------------------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------------------------------------------------------------------------
#–ø–æ–∏—Å–∫ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 1 –Ω–µ–¥–µ–ª—é
def process_tablelisttopweek_step(message):
    try:
        db = mysql.connector.connect(
        host=config.host,
        user=config.user,
        password=config.password,
        port=config.port,
        database=config.database
        )
        cursor = db.cursor()
        #*********************************************************
        sql = "SELECT sub_end FROM users WHERE userid=%s"
        val = (message.from_user.id, )
        cursor.execute(sql, val)
        result = cursor.fetchall()
        for time in result:
            sub_end_time = time[0]
        print(sub_end_time)
        #*********************************************************

        if sub_end_time < nowTime:
            markup = types.InlineKeyboardMarkup()
            bot.delete_message(message.chat.id, message.message_id)
            item_btn_subs = types.InlineKeyboardButton(text = '–ü–æ–¥–ø–∏—Å–∫–∞', callback_data='sub')
            item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
            markup.add(item_btn_subs, item_btn_back)
            bot.send_message(message.chat.id, "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫. –û—Ñ–æ—Ä–º–∏ –Ω–æ–≤—É—é —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ –±–æ—Ç–∞", reply_markup=markup)
        else:

            markup = types.InlineKeyboardMarkup()
            bot.delete_message(message.chat.id, message.message_id)
            item_btn_tablelist_dat = types.InlineKeyboardButton(text='üíõ –°–µ–≥–æ–¥–Ω—è', callback_data='now')
            item_btn_tablelist_tomorrow = types.InlineKeyboardButton(text='üíö –ó–∞–≤—Ç—Ä–∞', callback_data='twomorrow')
            item_btn_tablelist_week = types.InlineKeyboardButton(text='üß° –ù–µ–¥–µ–ª—è', callback_data='first_week')
            item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
            markup.add(item_btn_tablelist_dat, item_btn_tablelist_tomorrow, item_btn_tablelist_week, item_btn_back)
            #–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            sql = "SELECT user_group FROM users WHERE userid=%s"
            val = (message.from_user.id, )
            cursor.execute(sql, val)
            groups = cursor.fetchall()
            for group in groups:
                userGroup = group[0]


            
            sql = 'SELECT * FROM tablelist WHERE group_name=%s'
            val = (userGroup, )
            cursor.execute(sql,val)
            test = cursor.fetchall()
            for testi in test:
                bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + testi[1] + " –ø–æ 1 –Ω–µ–¥–µ–ª–µ:\n\n" + "üî∏ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:\n" + testi[3] + "\n\n" + "üî∏ –í—Ç–æ—Ä–Ω–∏–∫:\n" + testi[4] + "\n\n" + "üî∏ –°—Ä–µ–¥–∞:\n" +  testi[5] + "\n\n" + "üî∏ –ß–µ—Ç–≤–µ—Ä–≥:\n" +  testi[6] + "\n\n" + "üî∏ –ü—è—Ç–Ω–∏—Ü–∞:\n"+  testi[7], reply_markup=markup )
            #bot.delete_message(message.chat.id, message.message_id)
            cursor.close()
            db.close()
    except Exception as e:
        bot.reply_to(message, 'Error #33')
#-------------------------------------------------------------------------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------------------------------------------------------------------------
#–ø–æ–∏—Å–∫ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –ø–æ 2 –Ω–µ–¥–µ–ª–µ
def process_tablelistdaylowweek_step(message):
    try:

        db = mysql.connector.connect(
        host=config.host,
        user=config.user,
        password=config.password,
        port=config.port,
        database=config.database
        )
        cursor = db.cursor()
        #–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        sql = "SELECT user_group FROM users WHERE userid=%s"
        val = (message.from_user.id, )
        cursor.execute(sql, val)
        groups = cursor.fetchall()
        for group in groups:
            userGroup = group[0]


        #*********************************************************
        sql = "SELECT sub_end FROM users WHERE userid=%s"
        val = (message.from_user.id, )
        cursor.execute(sql, val)
        result = cursor.fetchall()
        for time in result:
            sub_end_time = time[0]
        print(sub_end_time)
        #*********************************************************

        if sub_end_time < nowTime:
            markup = types.InlineKeyboardMarkup()
            bot.delete_message(message.chat.id, message.message_id)
            item_btn_subs = types.InlineKeyboardButton(text = '–ü–æ–¥–ø–∏—Å–∫–∞', callback_data='sub')
            item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
            markup.add(item_btn_subs, item_btn_back)
            bot.send_message(message.chat.id, "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫. –û—Ñ–æ—Ä–º–∏ –Ω–æ–≤—É—é —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ –±–æ—Ç–∞", reply_markup=markup)
        else:
            markup = types.InlineKeyboardMarkup()
            bot.delete_message(message.chat.id, message.message_id)
            item_btn_tablelist_day = types.InlineKeyboardButton(text='üíô –°–µ–≥–æ–¥–Ω—è', callback_data='now_two')
            item_btn_tablelist_tomorrow = types.InlineKeyboardButton(text='üíú –ó–∞–≤—Ç—Ä–∞', callback_data='twomorrow_two')
            item_btn_tablelist_week = types.InlineKeyboardButton(text='üñ§ –ù–µ–¥–µ–ª—è', callback_data='second_week')
            item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
            markup.add(item_btn_tablelist_day, item_btn_tablelist_tomorrow, item_btn_tablelist_week, item_btn_back)

            #–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≥—Ä—É–ø–ø–µ
            sql = 'SELECT * FROM tablelist WHERE group_name=%s'
            val = (userGroup, )
            cursor.execute(sql, val)
            lists = cursor.fetchall()
            for list in lists:
                if today == 0:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n" + list[8], reply_markup=markup)
                elif today == 1:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n" + list[9], reply_markup=markup)
                elif today == 2:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n" + list[10], reply_markup=markup)
                elif today == 3:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n" +  list[11], reply_markup=markup)
                elif today == 4:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n\n" + list[12], reply_markup=markup)
                elif today == 5:
                    bot.send_message(message.chat.id, "–°–µ–≥–æ–¥–Ω—è —É —Ç–µ–±—è –≤—ã—Ö–æ–¥–æ–π", reply_markup=markup)
                elif today == 6:
                    bot.send_message(message.chat.id, "–°–µ–≥–æ–¥–Ω—è —É —Ç–µ–±—è –≤—ã—Ö–æ–¥–æ–π", reply_markup=markup)
            cursor.close()
            db.close()
    except Exception as e:
        bot.reply_to(message, 'Error #4')
#-------------------------------------------------------------------------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------------------------------------------------------------------------
#–ø–æ–∏—Å–∫ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –ø–æ 2 –Ω–µ–¥–µ–ª–µ
def process_tablelisttomorrowlowweek_step(message):
    try:
        db = mysql.connector.connect(
        host=config.host,
        user=config.user,
        password=config.password,
        port=config.port,
        database=config.database
        )
        cursor = db.cursor()
        #–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        sql = "SELECT user_group FROM users WHERE userid=%s"
        val = (message.from_user.id, )
        cursor.execute(sql, val)
        groups = cursor.fetchall()
        for group in groups:
            userGroup = group[0]

        #*********************************************************
        sql = "SELECT sub_end FROM users WHERE userid=%s"
        val = (message.from_user.id, )
        cursor.execute(sql, val)
        result = cursor.fetchall()
        for time in result:
            sub_end_time = time[0]
        print(sub_end_time)
        #*********************************************************

        if sub_end_time < nowTime:
            markup = types.InlineKeyboardMarkup()
            bot.delete_message(message.chat.id, message.message_id)
            item_btn_subs = types.InlineKeyboardButton(text = '–ü–æ–¥–ø–∏—Å–∫–∞', callback_data='sub')
            item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
            markup.add(item_btn_subs, item_btn_back)
            bot.send_message(message.chat.id, "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫. –û—Ñ–æ—Ä–º–∏ –Ω–æ–≤—É—é —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ –±–æ—Ç–∞", reply_markup=markup)
        else:

            markup = types.InlineKeyboardMarkup()
            bot.delete_message(message.chat.id, message.message_id)
            item_btn_tablelist_day = types.InlineKeyboardButton(text='üíô –°–µ–≥–æ–¥–Ω—è', callback_data='now_two')
            item_btn_tablelist_tomorrow = types.InlineKeyboardButton(text='üíú –ó–∞–≤—Ç—Ä–∞', callback_data='twomorrow_two')
            item_btn_tablelist_week = types.InlineKeyboardButton(text='üñ§ –ù–µ–¥–µ–ª—è', callback_data='second_week')
            item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
            markup.add(item_btn_tablelist_day, item_btn_tablelist_tomorrow, item_btn_tablelist_week, item_btn_back)


            #–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –≥—Ä—É–ø–ø–µ
            sql = 'SELECT * FROM tablelist WHERE group_name=%s'
            val = (userGroup, )
            cursor.execute(sql, val)
            lists = cursor.fetchall()
            for list in lists:
                if today == 0:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n\n" + list[9], reply_markup=markup)
                elif today == 1:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n\n" + list[10], reply_markup=markup)
                elif today == 2:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n\n" + list[11], reply_markup=markup)
                elif today == 3:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n\n" +  list[12], reply_markup=markup)
                elif today == 4:
                    bot.send_message(message.chat.id, "–ó–∞–≤—Ç—Ä–∞ —É —Ç–µ–±—è –≤—ã—Ö–æ–¥–æ–π", reply_markup=markup)
                elif today == 5:
                    bot.send_message(message.chat.id, "–ó–∞–≤—Ç—Ä–∞ —É —Ç–µ–±—è –≤—ã—Ö–æ–¥–æ–π", reply_markup=markup)
                elif today == 6:
                    bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + list[1] + " –Ω–∞ –∑–∞–≤—Ç—Ä–∞:\n\n" + list[8], reply_markup=markup)
            cursor.close()
            db.close()
    except Exception as e:
        bot.reply_to(message, 'Error #22234')
#-------------------------------------------------------------------------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------------------------------------------------------------------------
#–ø–æ–∏—Å–∫ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ 2 –Ω–µ–¥–µ–ª—é
def process_tablelistlowweek_step(message):
    try:
        db = mysql.connector.connect(
        host=config.host,
        user=config.user,
        password=config.password,
        port=config.port,
        database=config.database
        )
        cursor = db.cursor()
        #–ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏—è –≥—Ä—É–ø–ø—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        sql = "SELECT user_group FROM users WHERE userid=%s"
        val = (message.from_user.id, )
        cursor.execute(sql, val)
        groups = cursor.fetchall()
        for group in groups:
            userGroup = group[0]

        #*********************************************************
        sql = "SELECT sub_end FROM users WHERE userid=%s"
        val = (message.from_user.id, )
        cursor.execute(sql, val)
        result = cursor.fetchall()
        for time in result:
            sub_end_time = time[0]
        print(sub_end_time)
        #*********************************************************

        if sub_end_time < nowTime:
            markup = types.InlineKeyboardMarkup()
            bot.delete_message(message.chat.id, message.message_id)
            item_btn_subs = types.InlineKeyboardButton(text = '–ü–æ–¥–ø–∏—Å–∫–∞', callback_data='sub')
            item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
            markup.add(item_btn_subs, item_btn_back)
            bot.send_message(message.chat.id, "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –∏—Å—Ç–µ–∫. –û—Ñ–æ—Ä–º–∏ –Ω–æ–≤—É—é —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —É—Å–ª—É–≥–∞–º–∏ –±–æ—Ç–∞", reply_markup=markup)
        else:

            markup = types.InlineKeyboardMarkup()
            bot.delete_message(message.chat.id, message.message_id)
            item_btn_tablelist_day = types.InlineKeyboardButton(text='üíô –°–µ–≥–æ–¥–Ω—è', callback_data='now_two')
            item_btn_tablelist_tomorrow = types.InlineKeyboardButton(text='üíú –ó–∞–≤—Ç—Ä–∞', callback_data='twomorrow_two')
            item_btn_tablelist_week = types.InlineKeyboardButton(text='üñ§ –ù–µ–¥–µ–ª—è', callback_data='second_week')
            item_btn_back = types.InlineKeyboardButton(text='‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
            markup.add(item_btn_tablelist_day, item_btn_tablelist_tomorrow, item_btn_tablelist_week, item_btn_back)
            
            sql = 'SELECT * FROM tablelist WHERE group_name=%s'
            val = (userGroup, )
            cursor.execute(sql,val)
            test = cursor.fetchall()
            for testi in test:
                bot.send_message(message.chat.id, "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–ø–ø—ã " + testi[1] + " –ø–æ 1 –Ω–µ–¥–µ–ª–µ:\n\n" + "üîπ –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:\n" + testi[8] + "\n\n" + "üîπ –í—Ç–æ—Ä–Ω–∏–∫:\n" + testi[9] + "\n\n" + "üîπ –°—Ä–µ–¥–∞:\n" +  testi[10] + "\n\n" + "üîπ –ß–µ—Ç–≤–µ—Ä–≥:\n" +  testi[11] + "\n\n" + "üîπ –ü—è—Ç–Ω–∏—Ü–∞:\n"+  testi[12], reply_markup=markup)
            #bot.delete_message(message.chat.id, message.message_id)
            cursor.close()
            db.close()

    except Exception as e:
        bot.reply_to(message, 'Error #33')
#-------------------------------------------------------------------------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------------------------------------------------------------------------
#–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã
def process_changegroup_step(message):
    try:
        #–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã
        sql = "UPDATE users SET user_group=%s WHERE userid={0}".format(message.from_user.id)
        val = (message.text, )
        cursor.execute(sql, val)
        db.commit()
        
        bot.send_message(message.chat.id, "–í—ã —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–∏–ª–∏ —Å–≤–æ—é –≥—Ä—É–ø–ø—É –Ω–∞ " + message.text)
        markup = types.InlineKeyboardMarkup()
        item_btn_my_group = types.InlineKeyboardButton(text = 'üî• –ú–æ—è', callback_data='my_group')
        item_btn_change_group = types.InlineKeyboardButton(text = '–ò–∑–º–µ–Ω–∏—Ç—å', callback_data='change_group')
        item_btn_list_group = types.InlineKeyboardButton(text = 'üìå–°–ø–∏—Å–æ–∫', callback_data='list_group')
        item_btn_back = types.InlineKeyboardButton(text = '‚óÄ –ù–∞–∑–∞–¥', callback_data='back')
        markup.add(item_btn_my_group, item_btn_change_group, item_btn_list_group, item_btn_back)
        bot.send_message(message.chat.id, '–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—é', reply_markup=markup)

    except Exception as e:
        bot.reply_to(message, 'Error #33')
#-------------------------------------------------------------------------------------------------------------------------------------------------------------




def days_to_seconds(days):
    return days * 24 * 60 * 60



# Enable saving next step handlers to file "./.handlers-saves/step.save".
# Delay=2 means that after any change in next step handlers (e.g. calling register_next_step_handler())
# saving will hapen after delay 2 seconds.
bot.enable_save_next_step_handlers(delay=2)

# Load next_step_handlers from save file (default "./.handlers-saves/step.save")
# WARNING It will work only if enable_save_next_step_handlers was called!
bot.load_next_step_handlers()

if __name__ == '__main__':
    bot.polling(none_stop=True)

